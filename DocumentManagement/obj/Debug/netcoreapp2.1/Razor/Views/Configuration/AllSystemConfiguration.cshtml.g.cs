#pragma checksum "E:\Data File\Project\DocumentManagement\DocumentManagement\Views\Configuration\AllSystemConfiguration.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "75167d58d39e3d5698e494d3e2d9e17450d1f181"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Configuration_AllSystemConfiguration), @"mvc.1.0.view", @"/Views/Configuration/AllSystemConfiguration.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Configuration/AllSystemConfiguration.cshtml", typeof(AspNetCore.Views_Configuration_AllSystemConfiguration))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "E:\Data File\Project\DocumentManagement\DocumentManagement\Views\_ViewImports.cshtml"
using DocumentManagement;

#line default
#line hidden
#line 2 "E:\Data File\Project\DocumentManagement\DocumentManagement\Views\_ViewImports.cshtml"
using DocumentManagement.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"75167d58d39e3d5698e494d3e2d9e17450d1f181", @"/Views/Configuration/AllSystemConfiguration.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"da19c4b16b29ae1c5018fedbda5ddbae5a75d409", @"/Views/_ViewImports.cshtml")]
    public class Views_Configuration_AllSystemConfiguration : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/js/Configuration/SystemConfiguration/AllSystemConfiguration.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#line 1 "E:\Data File\Project\DocumentManagement\DocumentManagement\Views\Configuration\AllSystemConfiguration.cshtml"
  
    ViewData["Title"] = "All System Configuration";
    Layout = Context.Request.Headers["x-requested-with"] == "XMLHttpRequest" ? null : "~/Views/Shared/_Layout.cshtml";

#line default
#line hidden
            BeginContext(180, 1748, true);
            WriteLiteral(@"<style>
    .sb-settingspane-theme {
        display: block;
        height: 1px;
        width: 1px;
        position: absolute;
        overflow: hidden;
        opacity: 0;
    }

    .sb-settingspane-theme-container {
        display: inline-block;
        height: 25px;
        width: 25px;
        border-radius: 50%;
        border: 1px solid #7a7a7a;
        cursor: pointer;
        margin-left: 1px;
        margin-right: 14px;
    }

    .sb-settingspane-theme + .sb-settingspane-theme-selection::after {
        content: '';
        display: block;
        width: 7px;
        height: 13px;
        border: solid #00bcf2;
        border-width: 0 3px 3px 0;
        margin-left: 8px;
        margin-top: 3px;
        -webkit-transform: rotate(45deg);
        transform: rotate(45deg);
    }

    fieldset {
        margin-bottom: 15px;
    }

        fieldset legend {
            font-size: 16px;
        }
</style>


<div class=""page-bar"">
    <ul class=""page-breadc");
            WriteLiteral(@"rumb"">
        <li>
            <i class=""fa fa-list-ul""></i>
            <a onclick=""onAjaxLoad('All System Configuration', '/Configuration/AllSystemConfiguration' )"">All System Configuration</a>
        </li>
    </ul>
</div>
<div class=""portal-content"">
    <div id=""divAllSystemConfiguration"" class=""card"">
        <div class=""header"">
            <h4 class=""col-deep-green"">
                <strong>All System Configuration</strong>
            </h4>
        </div>
        <div class=""body"">
            <div class=""row"">
                <div class=""col-sm-12"">
                    <fieldset>
                        <legend>Choose a theme</legend>
                        <div id=""divChoseTheme"">
");
            EndContext();
            BeginContext(2309, 4593, true);
            WriteLiteral(@"                            <label>
                                <input class=""sb-settingspane-theme"" type=""radio"" name=""theme"" aria-label=""Blue"" data-name=""Blue"">
                                <span class=""sb-settingspane-theme-container"" title=""Blue"" style=""background: rgb(33, 91, 125);""></span>
                            </label>
                            <label>
                                <input class=""sb-settingspane-theme"" type=""radio"" name=""theme"" aria-label=""Light"" data-name=""Light"" checked=""checked"">
                                <span class=""sb-settingspane-theme-container sb-settingspane-theme-selection"" title=""Light"" style=""background: rgb(241, 241, 248);""></span>
                            </label>
                            <label>
                                <input class=""sb-settingspane-theme"" type=""radio"" name=""theme"" aria-label=""Dark"" data-name=""Dark"">
                                <span class=""sb-settingspane-theme-container"" title=""Dark"" style=""background: ");
            WriteLiteral(@"rgb(51, 51, 51);""></span>
                            </label>
                        </div>
                    </fieldset>
                    <fieldset>
                        <legend>Font size</legend>
                        <div id=""divThemeFontSize"">
                            <span>
                                <input id=""dropdownFontSize"" /><span> px</span>
                            </span>
                            <script>
                                $(""#dropdownFontSize"").kendoDropDownList({
                                    dataTextField: ""text"",
                                    dataValueField: ""value"",
                                    dataSource: [
                                        { text: ""12"", value: ""12"" },
                                        { text: ""13"", value: ""13"" },
                                        { text: ""14"", value: ""14"" },
                                        { text: ""15"", value: ""15"" },
                                    ");
            WriteLiteral(@"    { text: ""16"", value: ""2"" }
                                    ],
                                    index: 0,
                                    //change: onChange
                                });
                            </script>
                        </div>
                    </fieldset>
                    <fieldset>
                        <legend>Chosse file/folder view</legend>
                        <div id=""divFileOrFolderView"">
                            <span>
                                <input id=""dropdownFileOrFolderView"" />
                            </span>
                            <script>
                                $(""#dropdownFileOrFolderView"").kendoDropDownList({
                                    dataTextField: ""text"",
                                    dataValueField: ""value"",
                                    dataSource: [
                                        { text: ""List View"", value: ""tree"" },
                                  ");
            WriteLiteral(@"      { text: ""Tree View"", value: ""list"" }
                                    ],
                                    index: 0,
                                    //change: onChange
                                });
                            </script>
                        </div>
                    </fieldset>
                    <fieldset>
                        <legend>Upload file size</legend>
                        <div id=""divUploadFileSize"">
                            <span>
                                <input type=""number"" min=""1"" max=""200"" class=""k-textbox"" id=""dropdownUploadFileSize"" placeholder=""Enter file size"" /><span> mb</span>
                            </span>
                        </div>
                    </fieldset>
                </div>
            </div>
            <div class=""row p-30"">
                <div class=""col-xs-12""><hr /></div>
                <div class=""col-md-6 col-md-offset-1"">
                    <button type=""button"" class=""btn bg-g");
            WriteLiteral(@"reen waves-effect"" id=""btnSave""><i class=""fa fa-check""></i>&nbsp;Save</button>
                    <button type=""reset"" class=""btn  btn-info waves-effect"" id=""btnRefresh""><i class=""fa fa-refresh""></i>&nbsp;Refresh</button>
                    <button type=""button"" class=""btn bg-red waves-effect"" id=""btnCancel""><i class=""fa fa-times""></i>&nbsp;Cancel</button>
                </div>
                <div class=""col-xs-12""><hr /></div>
            </div>
        </div>
    </div>
</div>
");
            EndContext();
            BeginContext(6902, 88, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "5e0b5c6595c742d7bc776d304f9bcc9c", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
